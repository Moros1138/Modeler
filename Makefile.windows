PROJECT     := Modeler

RELEASE     := -O3
DEBUG       := -ggdb3 -Og
STATIC      := -Bstatic -static-libgcc -static-libstdc++
SHARED      := -static-libstdc++

# BUILD       := $(DEBUG)
BUILD      := $(RELEASE)

LINKTYPE    := $(STATIC)
#LINKTYPE   := $(SHARED)

CXX_FLAGS   := -std=c++17 $(BUILD) $(LINKTYPE)
CXX         := g++

BIN         := bin
SRC         := src
INC         := include
LIB         := lib
OBJ         := obj
RES         := res

INC_FLAG    := -I$(INC)
LIB_FLAG    := -L$(LIB)

LIBRARIES   := -luser32 -lgdi32 -lopengl32 -lgdiplus -lshlwapi -ldwmapi -lole32 -lcomctl32 -loleaut32 -luuid -lstdc++fs

SOURCES     := $(wildcard $(SRC)/*.cpp)
OBJECTS     := $(patsubst $(SRC)/%,$(OBJ)/%,$(SOURCES:.cpp=.windows.o))

.PHONY: clean all

all: $(BIN)/$(PROJECT).exe

# Compile only
$(OBJ)/%.windows.o : $(SRC)/%.cpp $(DEPENDENCIES)
	$(CXX) $(CXX_FLAGS) $(INC_FLAG) -c -o $@ $<

# Link the object files and libraries
$(BIN)/$(PROJECT).exe : $(OBJECTS)
	$(CXX) $(CXX_FLAGS) -o $(BIN)/$(PROJECT).exe $^ $(LIBRARIES) $(LIB_FLAG) -mwindows

clean:
	del .\$(BIN)\$(PROJECT).exe .\$(OBJ)\*.windows.o
